# ==============================================================================
print ("=============================")
print ("Project Euler - Problem 29")
print ("=============================")
# ==============================================================================
# Description:
# Consider all integer combinations of a^b for 2<=a<=5 and 2<=b<=5:
# 2: 4,  8,   16,  32
# 3: 9,  27,  81,  243
# 4: 16, 64,  256, 1024
# 5: 25, 125, 625, 3125
# If they are then placed in numerical order, with any repeats removed, we get
# the following sequence of 15 distinct terms:
# 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
# How many distinct terms are in the sequence generated by a^b for 2<=a<=100 and
# 2<=b<=100?
# ==============================================================================
import time
import math

result = 0
start_time = time.time()
# ***** BEGIN CODE FOR P29.py *****

MAX_POWER = 100
INIT_POWER = 2
test_list = []

for b in range(INIT_POWER, MAX_POWER+1):
    for a in range(INIT_POWER, MAX_POWER+1):
       value = a ** b
       test_list.append(value)

result = len(set(test_list))

# ***** END CODE FOR P29.py *****
run_time = time.time() - start_time
print ("Result is: ", result)
print ("Run time:   %.5f seconds" % run_time)
# END P29.py
